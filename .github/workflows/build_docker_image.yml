name: Build Docker Image

on:
  workflow_call:
    inputs:
      sourcePath:
        required: false
        type: string
        default: "./"
        description: "Path to the application source code that will be used for building the Docker image."
      dockerfilePath:
        required: false
        type: string
        default: "./Dockerfile"
        description: "Path to the Dockerfile relative to the source directory."
      isLoadDockerImage:
        required: false
        type: boolean
        default: false
        description: "Determines whether the built Docker image is loaded into the local after the build completes. Set to 'true' to make the image available locally. Defaults to 'false'"
      isPushDockerImage:
        required: false
        type: boolean
        default: true
        description: "Controls whether the built Docker image is pushed to a remote Docker registry after the build. Set to 'true' to upload the image to the registry specified in the 'tags' (e.g., Docker Hub). Defaults to 'false'."
      buildArgs:
        type: string
        required: false
        description: "Optional build arguments for the Docker image build process, specified as key-value pairs (e.g., 'KEY1=VALUE1 KEY2=VALUE2')."
      dockerTag:
        required: true
        type: string
      dockerCacheTag:
        required: true
        type: string
    secrets:
      awsAccessKeyId:
        required: true
      awsSecretAccessKey:
        required: true
      awsDefaultRegion:
        required: true
      awsAccountId:
        required: true
      ecrRepoName:
        required: true

jobs:
  setupAndBuildDocker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.awsAccessKeyId }}
          aws-secret-access-key: ${{ secrets.awsSecretAccessKey }}
          aws-region: ${{ secrets.awsDefaultRegion }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker Image ECR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.awsAccountId }}.dkr.ecr.${{ secrets.awsDefaultRegion }}.amazonaws.com/${{ secrets.ecrRepoName }}:${{ inputs.dockerTag }},${{ secrets.awsAccountId }}.dkr.ecr.${{ secrets.awsDefaultRegion }}.amazonaws.com/${{ secrets.ecrRepoName }}:latest
          cache-from: type=registry,ref=${{ secrets.awsAccountId }}.dkr.ecr.${{ secrets.awsDefaultRegion }}.amazonaws.com/${{ secrets.ecrRepoName }}:${{ inputs.dockerCacheTag }}
          cache-to: type=registry,ref=${{ secrets.awsAccountId }}.dkr.ecr.${{ secrets.awsDefaultRegion }}.amazonaws.com/${{ secrets.ecrRepoName }}:${{ inputs.dockerCacheTag }},mode=min,image-manifest=true,oci-mediatypes=true
